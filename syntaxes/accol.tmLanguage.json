{
  "fileTypes": [
    "acc"
  ],
  "name": "ACCOL",
  "patterns": [
  {
    "name": "meta.section.accol",
    "begin": "^[^*]*(\\*)" ,
    "beginCaptures": {
          "1": { "name": "punctuation.definition.section.accol" }
    },
    "end": "(?=^\\s*\\*)",
    "patterns": [
      {
        "name": "meta.definition.variable.accol",
        "begin": "SIGNALS",
        "beginCaptures": {
          "0": { "name": "entity.name.section.accol" }
        },
        "end": "(?=^\\s*\\*)",
        "patterns":[
          { "include": "#variable_def" }
        ]
      },
      {
        "name": "meta.definition.task.accol",
        "begin": "(TASK\\s+\\d+)",
        "beginCaptures": {
          "1": { "name": "entity.name.section.accol" }
        },
        "end": "(?=^\\s*\\*)",
        "patterns": [
          { "include": "#attributes" },
          { "include": "#line_numbers" },
          {
            "begin": "\\*",
            "beginCaptures": {
              "0": {"name": "support.function.accol"}
            },
            "end": "^(?=\\s*\\d+\\s+\\*)",
            "patterns": [
              { "include": "#comments" },
              {
                "begin": "CALCULATOR",
                "beginCaptures": {
                  "0": { "name": "entity.name.function.accol"}
                },
                "end": "^(?=\\s*\\d+\\s+\\*)",
                "patterns": [
                  { "include": "#line_numbers" },
                  { "include": "#grammar" },
                  { "include": "#comments" },
                  { "include": "#keywords" },
                  { "include": "#operators" },
                  { "include": "#variables" },
                  { "include": "#constants" }
                ]
              },
              { "include": "#modules" }
            ]
          }
        ]
      },
      {
        "name": "meta.definition.storage.array.accol",
        "begin": "[AL]-ARRAY \\d+",
        "beginCaptures": {
          "0": { "name": "entity.name.section.accol" }
        },
        "end": "(?=^\\s*\\*)",
        "patterns": [
          { "include": "#constants" }
        ]
      },
      {
        "name": "meta.definition.storage.list.accol",
        "begin": "LIST \\d+",
        "beginCaptures": {
          "0": { "name": "entity.name.section.accol" }
        },
        "end": "(?=^[^*]*\\*)",
        "patterns": [
          { "include": "#line_numbers" },
          { "include": "#variables" }
        ]
      },
      {
        "name": "meta.definition.storage.list.accol",
        "begin": "\\S+",
        "beginCaptures": {
          "0": { "name": "entity.name.section.accol" }
        },
        "end": "(?=^[^*]*\\*)",
        "patterns": [
          {
            "match": "^\\s+(\\S+)\\s",
            "captures": {
              "1": { "name": "variable.parameter.accol"}
            }
          },
          { "include": "#attributes" },
          { "include": "#constants" }
        ]
      }
    ]
  }
  ],
  "repository": {
    "line_numbers": {
      "patterns": [
        {
          "match": "^\\s*(\\d+)\\s+",
          "captures": {
            "1": { "name": "support.other.accol" }
          }
        }
      ]
    },
    "modules": {
      "patterns": [
        {
          "begin": "\\S+",
          "beginCaptures": {
            "0": { "name": "entity.name.function.accol" }
          },
          "end": "^(?=\\s*\\d+\\s+\\*)",
          "patterns": [
            {
              "match": "^\\s+(\\S+)(\\s+)(?=\\S+)",
              "captures": {
                "1": { "name": "variable.parameter.accol"},
                "2": { "name": "punctuation.whitespace.key-value.separator.accol"}
              }
            },
            { "include": "#variables" },
            { "include": "#keywords" },
            { "include": "#operators" },
            { "include": "#constants" }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "(C)(\\n|\\s)(.+)?$",
          "captures": {
            "1": { "name": "punctuation.definition.comment.accol" },
            "2": { "name": "punctuation.whitespace.comment.leading.accol" },
            "3": { "name": "comment.line.accol" }
          }
        }]
    },
    "variable_def": {
      "patterns": [{
        "begin": "^(\\s+)(?=\\S+\\s+[LAS]A?)",
        "patterns": [{
          "name": "support.variable.accol",
          "match": "(#)[A-Z0-9_-]{1,8}((\\.)[A-Z0-9_-]{,8})?((\\.)[A-Z0-9_-]{,8})?",
          "captures": {
            "1": { "name": "punctuation.definition.attribute.accol"},
            "3": { "name": "punctuation.separator.namespace.accol"},
            "5": { "name": "punctuation.separator.namespace.accol"}
            }
          },
          {
          "name": "variable.accol",
          "match": "[A-Z][A-Z0-9_-]{,7}(\\.)[A-Z0-9_-]{,8}((\\.)[A-Z0-9_-]{,8})?",
          "captures": {
            "1": { "name": "punctuation.separator.namespace.accol"},
            "3": { "name": "punctuation.separator.namespace.accol"}
            }
          },
          { "name": "storage.type.accol", "match": "\\b[LAS]A?\\b" },
          { "name": "storage.modifier.accol", "match": "\\b([RW]\\d|[AMC][IE]|\\S+(?=:)|C)\\b" },
          { "include": "#constants" }
        ],
        "end": "^(?=\\1\\S|^\\*)"
      }]
    },
    "variables": {
      "patterns": [{
        "name": "support.variable.accol",
        "match": "(#)?[A-Z][A-Z0-9_-]{,7}((\\.)[A-Z0-9_-]{,8})?((\\.)[A-Z0-9_-]{,8})?",
        "captures": {
          "1": { "name": "punctuation.definition.attribute.accol"},
          "3": { "name": "punctuation.separator.namespace.accol"},
          "5": { "name": "punctuation.separator.namespace.accol"}
        }
      }]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.accol",
          "match": "(\\b|:)(IF|ENDIF|ELSE|FOR|ENDFOR|BREAK)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [{
        "name": "keyword.operator.accol",
        "match": "\\+|-|\\*|/|(<|>|!|=)=?|&|\\||\\^|~|:\\w{1,3}[^\\s]"
      }]
    },
    "constants": {
      "patterns": [
        { "name": "constant.language.accol", "match": "@" },
        { "name": "constant.numeric.bytes.accol", "match": "\\b-?\\d{1,4}(\\.\\d{1,2})?\\s?[tTgGmMkK]?[bB]\\b" },
        { "name": "constant.numeric.real.accol", "match": "\\b-?\\d{1,4}\\.\\d*(E-?\\d{3})?" },
        { "name": "constant.numeric.integer.accol", "match": "\\b\\d+\\b" },
        { "name": "string.quoted.double.accol", "begin": "'", "end": "'" },
        { "name": "strings.unquoted.accol", "match": "\\b\\w+\\b" }
      ]
    },
    "grammar": {
      "patterns": [
        { "name": "punctuation.separator.arguments.accol", "match": "," },
        { "name": "punctuation.definition.arguments.begin.accol", "match": "\\[" },
        { "name": "punctuation.definition.arguments.end.accol", "match": "\\]" },
        { "name": "punctuation.parenthesis.begin.accol", "match": "\\(" },
        { "name": "punctuation.parenthesis.end.accol", "match": "\\)" }
      ]
    },
    "attributes": {
      "patterns": [
        {
          "begin": "\\s+(\\w+)(:)\\s+(?=\\S)",
          "beginCaptures": {
            "1": { "name": "entity.other.attribute-name.accol" },
            "2": { "name": "punctuation.separator.key-value.accol" }
          },
          "end": "(?=\\s)",
          "patterns": [
            { "include": "#constants" }
          ]
        }
      ]
    }
  },
  "scopeName": "source.accol"
}